# https://docs.github.com/actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  metadata:
    name: Metadata
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version-step.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Extract current version
        id: version-step
        run: echo "::set-output name=version::$(head -n 1 yourls_version)"

  files:
    name: Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Generate variants
        run: ./bin/generate-variants.sh dist/

      - name: Prepare scripts
        run: |
          mkdir dist/bin
          cp ./bin/* dist/bin
          rm ./dist/bin/generate-variants.sh

      - name: Copy version
        run: cp ./yourls_version dist/

      - name: Save files
        uses: actions/upload-artifact@v2
        with:
          name: context-files
          path: dist

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - metadata
      - files
    strategy:
      matrix:
        variant: [fpm-alpine, fpm, apache]
    steps:
      - name: Retrieve context files
        uses: actions/download-artifact@v3
        with:
          name: context-files

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.variant }}
          tags: yourls-test:${{ needs.metadata.outputs.version }}-${{ matrix.variant }}
          outputs: type=docker,dest=/tmp/container-image.tar
          cache-from: type=gha,scope=${{ matrix.variant }}
          cache-to: type=gha,scope=${{ matrix.variant }},mode=max

      - name: Save image
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.variant }}-image
          path: /tmp/container-image.tar
          retention-days: 1

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - metadata
      - build
    strategy:
      matrix:
        variant: [fpm-alpine, fpm, apache]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: docker-library/official-images

      - name: Retrieve image artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.variant }}-image

      - name: Load image
        run: docker load --input container-image.tar

      - name: Test
        run: ./test/run.sh "${IMAGE}"
        env:
          IMAGE: yourls-test:${{ needs.metadata.outputs.version }}-${{ matrix.variant }}

  analysis:
    name: Analysis
    uses: ./.github/workflows/analysis.yml
    permissions:
      actions: read
      contents: read
      security-events: write
    needs:
      - metadata
      - build

  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    needs:
      - metadata
      - build
      - test
    uses: ./.github/workflows/release.yml
    permissions:
      contents: write
      packages: write
    with:
      version: ${{ needs.metadata.outputs.version }}
    secrets:
      image: ${{ secrets.REGISTRY_IMAGE }}
