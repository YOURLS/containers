# https://docs.github.com/actions

name: Release

on:
  workflow_call:
    inputs:
      artifact:
        required: false
        default: true
        type: string
        description: True if analysis must be run against a built artifact
      version:
        required: true
        type: string
        description: Upstream app version
    secrets:
      image:
        required: true
        description: Image name for the container registry

jobs:
  repository:
    name: Repository
    runs-on: ubuntu-latest
    if: inputs.artifact
    permissions:
      contents: write
    steps:
      - name: Retrieve context files
        uses: actions/download-artifact@v3
        with:
          name: context-files

      - run: chmod +x bin/* && chmod +x ./*/docker-entrypoint.sh

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
          publish_branch: dist
          enable_jekyll: true

  images:
    name: Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        variant:
          - fpm-alpine
          - fpm
          - apache
    steps:
      - name: Retrieve context files
        uses: actions/download-artifact@v3
        with:
          name: context-files

      - run: chmod +x bin/* && chmod +x ./*/docker-entrypoint.sh

      - name: Use Docker builder
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to Container Registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract aliases
        id: aliases
        run: echo "::set-output name=aliases::$(bash ./bin/generate-aliases.sh ${{ inputs.version }} ${{ matrix.variant }} ghcr.io/${{ secrets.image }})"

      - name: Retrieve image artifact
        uses: actions/download-artifact@v3
        if: inputs.artifact
        with:
          name: ${{ matrix.variant }}-image

      - name: Load artifact image
        if: inputs.artifact
        run: docker load -i container-image.tar

      - name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          context: ./${{ matrix.variant }}/
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ secrets.image }}
          tags: ${{ steps.aliases.outputs.aliases }}
          cache-from: type=gha,scope=${{ matrix.variant }}
          cache-to: type=gha,scope=${{ matrix.variant }},mode=max
          push: true
