name: Publish

on:
  push:
    branches: [main]

jobs:
  files:
    name: Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Generate variants
        run: ./bin/generate-variants.sh dist/

      - name: Prepare scripts
        run: |
          mkdir dist/bin
          cp ./bin/* dist/bin

      - name: Copy version
        run: cp ./yourls_version dist/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          publish_dir: ./dist
          publish_branch: dist
          enable_jekyll: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

  images:
    name: Images
    runs-on: ubuntu-latest
    needs: files
    strategy:
      matrix:
        variant: [fpm-alpine, fpm, apache]
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: dist

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Use Docker builder
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to Container Registry
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Extract aliases
        id: aliases
        run: echo ::set-output name=aliases::$(./bin/generate-aliases.sh ${{ matrix.variant }} ghcr.io/${{ secrets.REGISTRY_IMAGE }})

      - name: Docker build and push
        uses: docker/build-push-action@v2.7.0
        with:
          context: ./${{ matrix.variant }}/
          file: ./${{ matrix.variant }}/Dockerfile
          labels: |
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=https://github.com/${{ secrets.REGISTRY_IMAGE }}
          tags: ${{ steps.aliases.outputs.aliases }}
          push: true

  hub:
    name: Hub
    runs-on: ubuntu-latest
    needs: files
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          ref: dist

      - name: Download bashbrew
        run: |
          wget https://doi-janky.infosiftr.net/job/bashbrew/job/master/lastSuccessfulBuild/artifact/bashbrew-amd64
          mkdir -p "$HOME/.local/bin"
          mv bashbrew-amd64 "$HOME/.local/bin/bashbrew"
          chmod +x "$HOME/.local/bin/bashbrew"
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          bashbrew --version

      - name: Generate stackbrew
        run: ./bin/generate-stackbrew-library.sh > stackbrew.txt

      - uses: actions/upload-artifact@v2
        with:
          name: stackbrew.txt
          path: stackbrew.txt
